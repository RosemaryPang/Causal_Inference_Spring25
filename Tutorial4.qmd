---
title: "Tutorial 4 Mediation Analysis"
pagetitle: Tutorial_4
---

Mediation analysis is a key tool in causal inference, helping researchers understand how and why a treatment influences an outcome through an intermediate variable (mediator). In this tutorial, you'll learn how to implement both **traditional and causal mediation analysis** in R using the `mediation` package, as well as explore **structural equation modeling (SEM)** with the `lavaan` package. By the end of this tutorial, you should be familiar with the following:

1. packages `mediation` and `lavaan`

2. Traditional mediation analysis

3. Causal mediation analysis

4. Structural equation modeling

# Front-end Matters

The `mediation` and `lavaan` packages are essential tools for conducting **mediation analysis** and **structural equation modeling (SEM)** in R. The `mediation` package provides a framework for both traditional and causal mediation analysis, allowing researchers to estimate direct and indirect effects while accounting for confounding and sensitivity analyses. The `lavaan` package enables flexible SEM modeling, handling multiple mediators, latent variables, and complex causal pathways.

```{r}
#install.packages("mediation")
#install.packages("lavaan")

library(mediation)
library(lavaan)
```

# Traditional mediation analysis

In this section, we perform traditional mediation analysis using Baron and Kenny’s method. This approach involves a three-step regression process to assess whether the effect of an independent variable on an outcome is mediated through an intermediate variable.

In this tutorial, we examine whether self-esteem serves as a mediator in the relationship between grades and happiness. In this dataset, X represents grades, Y represents happiness, and M represents self-esteem.

```{r}
tradata <- read.csv('http://static.lib.virginia.edu/statlab/materials/data/mediationData.csv')

head(tradata)
```

**Step 1**, we want X to affect Y. If there is no relationship between X and Y, there is nothing to mediate. Although this is what Baron and Kenny originally suggested, this step is controversial. Even if we don’t find a significant association between X and Y, we could move forward to the next step if we have a good theoretical background about their relationship.

```{r}
step1 <- lm(Y ~ X, tradata)
summary(step1)
```

Since X has a significant impact on Y, we can move on to the next step: **Step 2**, we want X to affect M. If X and M have no relationship, M is just a third variable that may or may not be associated with Y. A mediation makes sense only if X affects M.

```{r}
step2 <- lm(M ~ X, tradata)
summary(step2)
```

Since X has a significant impact on M, we can move on to the next step: **Step 3**, we want M to affect Y, but X to no longer affect Y (or X to still affect Y but in a smaller magnitude). If a mediation effect exists, the effect of X on Y will disappear (or at least weaken) when M is included in the regression. The effect of X on Y goes through M.

```{r}
step3 <- lm(Y ~ X + M, tradata)
summary(step3)
```

If the effect of X on Y completely disappears, M fully mediates between X and Y (full mediation). If the effect of X on Y still exists, but in a smaller magnitude, M partially mediates between X and Y (partial mediation). The example shows a full mediation, yet a full mediation rarely happens in practice.

Once we find these relationships, we want to see if this mediation effect is statistically significant. To do so, there are two main approaches: the Sobel test and bootstrapping.

Sobel test is a parametric test used to determine whether the indirect effect (a × b) is statistically significant. It uses the standard errors of a (X → M) and b (M → Y) to compute a Z-score, testing if the indirect effect is significantly different from zero. Sobel test assumes normality of the indirect effect, and requires large sample size.

```{r}
library(bda)

# Extract coefficients and standard errors
a <- coef(step2)["X"]  # Effect of X on M
b <- coef(step3)["M"]  # Effect of M on Y
sa <- summary(step2)$coefficients["X", "Std. Error"]  # SE of a
sb <- summary(step3)$coefficients["M", "Std. Error"]  # SE of b

# Sobel Test Calculation
sobel_z <- (a * b) / sqrt((b^2 * sa^2) + (a^2 * sb^2))
sobel_p <- 2 * (1 - pnorm(abs(sobel_z)))  # Two-tailed p-value

# Print results
cat("Sobel Test Z-score:", sobel_z, "\n")
cat("Sobel Test p-value:", sobel_p, "\n")

```

Bootstrapping, in contrast, is a non-parametric method that repeatedly resamples the dataset to create an empirical distribution of the mediation effect. Instead of assuming normality, it estimates confidence intervals (CIs) from thousands of resamples. Bootstrapping has key advantages including no normality assumption, higher statistical power, and works with small samples. Bootstrapping is strongly recommended in recent years.

```{r}
library(boot)

# Define function to compute indirect effect
indirect_effect <- function(data, indices) {
  d <- data[indices, ]  # Resample data
  a <- coef(lm(M ~ X, data = d))["X"]
  b <- coef(lm(Y ~ X + M, data = d))["M"]
  return(a * b)  # Indirect effect
}

# Perform bootstrapping
set.seed(123)
boot_results <- boot(data = tradata, statistic = indirect_effect, R = 1000)

# Print bootstrapped confidence intervals
boot.ci(boot_results, type = "perc")
```

Both tests indicate a significant mediation effect. We conclude that **Grades positively influence happiness by increasing self-esteem.**

However, traditional mediation analysis has key limitations -- it relies on correlational assumptions and does not explicitly model counterfactual outcomes. This means that while we observe a mediation effect, we cannot make strong causal claims about whether self-esteem truly transmits the effect of grades on happiness.

# Causal mediation analysis

To address these limitations, we turn to causal mediation analysis, which is implemented in R using the mediation package. While the first steps look similar to Baron & Kenny’s approach—fitting regression models for the mediator and outcome—the mediate() function goes beyond simple associations by using a counterfactual framework to estimate the **Average Causal Mediation Effect (ACME)** and **Average Direct Effect (ADE)**. This allows for a formal causal interpretation of mediation effects, assuming key assumptions hold.

## Simple model

```{r}
results <- mediate(step2, step3, treat='X', mediator='M',boot=TRUE, sims=500)
summary(results)

plot(results)
```

The **total effect** in the summary is $b_1$ in the fist step: total effect of X on Y without M. The **direct effect (ADE)** is $b_4$ in the third step: a direct effect of X on Y after taking into account of a mediator effect of M. The **mediation effect (ACME)** is the total effect minus the direct effect ($b_1-b_4$), which equals to the product of a coefficient of X in the second step and a coefficient of M in the last step ($b_2*b_3$). The goal of mediation analysis is to obtain this mediation effect and see if it’s statistically significant.

Let's look into a more complicated model. We're using *job* data in `mediation` package.

## Model with covariates

We use the *jobs* data from `mediation` package. This dataset is from the Job Search Intervention Study. In this dataset, people in the treatment group participated in job-skills workshops (treat). The outcome variable is a continuous measure of depressive symptoms (depress2). A continuous measure of job-search self efficacy represents a key mediating variable (job_seek). And we also have a list of covariates, including pre-treatment level of depression (depress1), education (educ), income, race(nonwhite), marital status (marrital), age, sex, previous occupation (occp), and the level of economic hardship (econ_hard).

```{r}
data("jobs")
head(jobs)
```

For causal mediation analysis, we first estimate two linear regressions for both the mediator and the outcome.

```{r}
model.m <- lm(job_seek ~ treat + depress1 + econ_hard + sex + age + occp + marital + nonwhite + educ + income, data = jobs)

model.y <- lm(depress2 ~ treat + job_seek + depress1 + econ_hard + sex + age + occp + marital + nonwhite + educ + income, data = jobs)

out.1 <- mediate(model.m, model.y, sims = 1000, boot = TRUE, treat = "treat",
mediator = "job_seek")

summary(out.1)
```

The job-skills workshop reduces depressive symptoms, at least in part, by increasing job-seeking behavior.

## Sensitivity

We can quickly run a sensitivity analysis using the `medsens()` function from the mediation package. This will help assess how unmeasured confounding between the mediator (job_seek) and outcome (depress2) could affect your results.

```{r}
sens.out <- medsens(out.1, sims = 1000)

summary(sens.out)

plot(sens.out)
```

ρ (rho) represents the correlation between residual confounders that affect both the mediator (job_seek) and the outcome (depress2). ρ = -0.2 means that for the mediation effect (ACME) to completely disappear, an unmeasured confounder would need to create a correlation of -0.2 between the errors in M and Y. Since ρ = -0.2 is relatively small, the mediation effect is somewhat sensitive to hidden confounders.

The graph shows how fast ACME approaches 0 as ρ increases. If the ACME estimate does not change much across different rho values, it means that the mediation effect is not highly sensitive to hidden confounding. In contrast, if ACME drops to zero (or changes drastically) with a small shift in rho, it indicates that even a small amount of unmeasured confounding could invalidate the mediation effect.

## Mediator is also moderator

We can also allow the causal mediation effect to vary with treatment status. Here, the **model for the outcome** must be altered by including an interaction term between the treatment indicator (treat) and the mediator variable (job_seek)

```{r}
model.y.inter <- lm(depress2 ~ treat + job_seek + treat:job_seek + depress1 + econ_hard + sex + age + occp + marital + nonwhite + educ + income, data = jobs)

out.2 <- mediate(model.m, model.y.inter, sims = 1000, boot = TRUE, treat = "treat", mediator = "job_seek")

summary(out.2)
```

Now estimates for the mediation effects, direct effects and proportion of total effect mediated correspond to the levels of the treatment. In this case, the mediation effect under the treatment condition, listed as ACME (treated) is estimated to be −.012, while the mediation effect under the control condition, ACME (control), is −.019.

Both ACME values are negative, indicating that job-seeking behavior reduces depressive symptoms, regardless of whether individuals received treatment. However, the absolute value of ACME is larger for the control group (-0.0185) than for the treated group (-0.0117). This suggests that the indirect effect of job-seeking on depression is stronger when individuals did NOT receive treatment.

When having a *mediate* object with interaction, we can select which treatment condition to plot the estimated effects for by selecting the *treatment* argument.

```{r}
plot(out.2, treatment = "both")

#plot(out.2, treatment = "treated")
#plot(out.2, treatment = "control")
```

Solid lines represent treated group, and dotted lines represent control group. We can also make sensitivity plots for different treatment conditions.

```{r}
sens.out.2 <- medsens(out.2, sims = 1000)
summary(sens.out.2)
plot(sens.out.2)
```

The `mediation` package is not limited to OLS models; it also supports mediation analysis for binary, ordinal, and other types of dependent variables, making it highly flexible for different study designs. For more details and documentation, visit the [mediation](https://cran.r-project.org/web/packages/mediation/mediation.pdf) package website.

# Structural Equation Modeling (SEM)

Structural Equation Modeling (SEM) is a powerful statistical framework that allows for estimating complex relationships among variables, including mediation effects. Unlike traditional mediation analysis, SEM enables researchers to simultaneously model multiple mediators, assess indirect and direct effects, and incorporate more flexible model specifications. In this tutorial, we focus on multiple mediation models, specifically **parallel mediation** (where multiple mediators operate independently) and **sequential mediation** (where mediators influence each other in a chain before affecting the outcome). By using SEM, we can gain deeper insights into how multiple pathways contribute to the overall effect of an independent variable on an outcome.

The data we are using is downloaded from [here](https://drive.google.com/file/d/1Adn0FP1E82v2moLupRAj8EZZ3O09CtaT/view). Make sure you download the data before running the tutorial.

This data includes independent variable (*mastery* goal), outcome (*achieve*ment), and multiple mediating variables, such as interest and anxiety.

```{r}
library(readxl)
SEMdata <- read_excel("regression data.xls")
head(SEMdata)
```

## Parallel mediation

In parallel mediation, multiple mediators operate independently to explain the effect of an independent variable (X) on an outcome (Y). This means that each mediator contributes separately to the total mediation effect, without influencing each other.

We first write down the model specifying all relationships. The indirect effects are defined to capture the mediation pathways: one through **interest** (mstr_int_achv = a × b) and another through **anxiety** (mstr_anxt_achv = c × d). The total effect combines all direct and indirect effects, allowing us to assess the full impact of mastery on achievement.

```{r}
model <- "achieve ~ b*interest + d*anxiety + e*mastery
          interest ~ a*mastery
          anxiety ~ c*mastery
          mstr_int_achv := a*b
          mstr_anxt_achv := c*d
          Total := a*b + c*d + e
"
```

In `lavaan`, the `:=` operator is used to define custom parameters based on existing model estimates. This is particularly useful in mediation analysis, where indirect effects need to be explicitly computed from path coefficients.

```{r}
fit <- sem(model, data = SEMdata, se="bootstrap", bootstrap = 1000)
summary(fit, fit.measures = T, standardized = T, rsquare = T)
```

Results indicate that mastery goal has indirect effect of 0.162 on achievement through interest. But mastery goal doesn't have indirect effect on achievement through anxiety. Mastery goal has total effect of 0.524 on achievement. 

## Sequential mediation

In sequential mediation, the mediators are causally dependent on each other, forming a chain-like process where the effect of the independent variable (X) is transmitted through multiple steps before reaching the outcome (Y). Unlike parallel mediation, where mediators operate independently, sequential mediation assumes that **one mediator influences another** before affecting Y. This allows researchers to explore how intermediate mechanisms unfold over time. For example, in an educational setting, mastery might first enhance interest, which then reduces anxiety, ultimately leading to higher achievement.

```{r}
model2 <- "achieve ~ c*anxiety + e*interest + f*mastery
           interest ~ a*mastery
           anxiety ~ b*interest + d*mastery
           mstr_int_anxt_achv := a*b*c
           mstr_int_achv := a*e
           mstr_anxt_achv := d*c
           int_anxt_achv := b*c
           total_mstr := a*b*c + a*e + d*c + f
           total_int := b*c + e
"
```

Note that in sequential mediation, it is not enough to only compute the total and indirect effects of the initial treatment variable (mastery). Since mediators influence one another in a chain, we must also consider the total and indirect effects of the first mediator (interest) to fully capture the mediation process. 

```{r}
fit2 <- sem(model2, data = SEMdata, se="bootstrap", bootstrap = 1000)
summary(fit2, fit.measures = T, standardized = T, rsquare = T)
```

Results indicate that mastery goal has indirect effect of 0.162 on achievement through interest. But this indirect effect does not happen through anxiety. Mastery goal also show a total effect of 0.524 on achievement. 

# Conclusion

In this tutorial, we explored different approaches of mediation analysis, starting with traditional mediation analysis using the Baron and Kenny method, followed by causal mediation analysis and `mediation` package, which provides a counterfactual framework for estimating indirect effects. Finally, we applied Structural Equation Modeling (SEM) to mediation, focusing on parallel and sequential mediation models. SEM enables simultaneous estimation of multiple pathways, providing a more comprehensive framework for analyzing mediation effects. By combining these methods, we can better understand complex causal relationships and refine mediation analysis in research.

